services:
  nats:
    image: nats:latest
    container_name: nats-server
    ports:
      - "${NATS_PORT}:4222"    # Client connections
      - "${NATS_MONITORING_PORT}:8222"    # HTTP monitoring
      - "${NATS_CLUSTER_PORT}:6222"    # Routing port for clustering
    command: [
      "-js",                    # Enable JetStream
      "-m", "8222",            # Enable monitoring on port 8222
      "-sd", "/data",          # Store directory for JetStream
      "--cluster_name", "${NATS_CLUSTER_ID}",  # Cluster name
    ]
    volumes:
      - nats-storage:/data
    networks:
      - microservice-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8222/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  nats-box:
    image: natsio/nats-box:latest
    container_name: nats-box
    networks:
      - microservice-network
    depends_on:
      - nats
    command: ["sleep", "infinity"]
    environment:
      - NATS_URL=nats://nats:4222

  nats-surveyor:
    image: natsio/nats-surveyor:latest
    container_name: nats-surveyor
    ports:
      - "7777:7777"    # Surveyor web UI
    networks:
      - microservice-network
    depends_on:
      - nats
    command: [
      "-s", "nats://nats:4222",
      "--addr", "0.0.0.0",
      "--port", "7777"
    ]
    environment:
      - NATS_URL=nats://nats:4222

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    networks:
      - microservice-network
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    depends_on:
      - nats

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - microservice-network
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - prometheus
  
  nats-nui:
    image: ghcr.io/nats-nui/nui:latest
    container_name: nats-nui
    ports:
      - "31311:31311"
    networks:
      - microservice-network
    depends_on:
      - nats
    volumes:
      - nats-nui:/db

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "12345678"
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    networks:
      - microservice-network
    volumes:
      - postgres-data:/var/lib/postgresql/data

networks:
  microservice-network:
    driver: bridge

volumes:
  nats-storage:
    driver: local
  nats-nui:
    driver: local
  grafana-storage:
    driver: local
  postgres-data:
    driver: local